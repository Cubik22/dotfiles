#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

# Set and exec into the default layout generator, rivertile.
# River will send the process group of the init executable SIGTERM on exit
riverctl default-layout rivertile

# start rivertile without padding
rivertile -view-padding 0 -outer-padding 0 -main-ratio 0.6 &

# start foot server
foot --server &

# Start pipewire (before waybar otherwise PulseAudio module may not start)
pipewire &
pipewire-pulse &
#pipewire-media-session &

# start waybar
waybar &

# Turin coordinates
# wlsunset -l 45.1 -L 7.7 &
# Lausanne coordinates
wlsunset -l 46.5 -L 6.6 &

# libinput-gestures
libinput-gestures &

# wob
if [ -p "$WOB_PIPE" ]; then
    killall wob
	rm -f "$WOB_PIPE"
fi
mkfifo $WOB_PIPE
tail -f $WOB_PIPE | wob --anchor "top" --anchor "right" &

# scale everything (problems with partial scaling)
#wlr-randr --output eDP-1 --scale 1.25

# Use the "logo" key as the primary modifier
mod="Mod4"

### APP Mode+Control ###

# Return footclient 
riverctl map normal $mod+Control Return spawn footclient

# C chromium
#riverctl map normal $mod+Control C spawn "chromium --force-dark-mode --enable-features=UseOzonePlatform,WebUIDarkMode --ozone-platform=wayland"

# F firefox
riverctl map normal $mod+Control F spawn firefox-wayland
# incognito mode
riverctl map normal $mod+Control+Shift F spawn "firefox-wayland -private-window"

# Z zathura
# riverctl map normal $mod+Control Z spawn "zathura $zopen"

### WINDOWS ###

# screenshots
riverctl map normal $mod S spawn 'grim -g "$(slurp)" - | wl-copy-env'

# Mod+Q to close the focused view
riverctl map normal $mod Q close

# Mod+Shift+E to exit river
riverctl map normal $mod+Shift E exit

# Mod+J and Mod+K to focus the next/previous view in the layout stack
riverctl map normal $mod J focus-view next
riverctl map normal $mod K focus-view previous

# Mod+Shift+J and Mod+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal $mod+Shift J swap next
riverctl map normal $mod+Shift K swap previous

# Mod+Period and Mod+Comma to focus the next/previous output
riverctl map normal $mod Period focus-output next
riverctl map normal $mod Comma focus-output previous

# Mod+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal $mod+Shift Period send-to-output next
riverctl map normal $mod+Shift Comma send-to-output previous

# Mod+Return to bump the focused view to the top of the layout stack
riverctl map normal $mod Return zoom

# Mod+H and Mod+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal $mod H send-layout-cmd rivertile "main-ratio -0.025"
riverctl map normal $mod L send-layout-cmd rivertile "main-ratio +0.025"

# Mod+Shift+H and Mod+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal $mod+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal $mod+Shift L send-layout-cmd rivertile "main-count -1"

# Mod+Alt+{H,J,K,L} to move views
riverctl map normal $mod+Mod1 H move left 100
riverctl map normal $mod+Mod1 J move down 100
riverctl map normal $mod+Mod1 K move up 100
riverctl map normal $mod+Mod1 L move right 100

# Mod+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal $mod+Mod1+Control H snap left
riverctl map normal $mod+Mod1+Control J snap down
riverctl map normal $mod+Mod1+Control K snap up
riverctl map normal $mod+Mod1+Control L snap right

# Mod+Alt+Shif+{H,J,K,L} to resize views
riverctl map normal $mod+Mod1+Shift H resize horizontal -100
riverctl map normal $mod+Mod1+Shift J resize vertical 100
riverctl map normal $mod+Mod1+Shift K resize vertical -100
riverctl map normal $mod+Mod1+Shift L resize horizontal 100

# Mod + Left Mouse Button to move views
riverctl map-pointer normal $mod BTN_LEFT move-view

# Mod + Right Mouse Button to resize views
riverctl map-pointer normal $mod BTN_RIGHT resize-view

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Mod+[1-9] to focus tag [1-9]
    riverctl map normal $mod $i set-focused-tags $tags

    # Mod+Shift+[1-9] to tag focused view with tag [1-9]
    riverctl map normal $mod+Shift $i set-view-tags $tags

    # Mod+Ctrl+[1-9] to toggle focus of tag [1-9]
    riverctl map normal $mod+Control $i toggle-focused-tags $tags

    # Mod+Shift+Ctrl+[1-9] to toggle tag [1-9] of focused view
    riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done

# Mod+0 to focus all tags
# Mod+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal $mod 0 set-focused-tags $all_tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags

# Mod+Space to toggle float
riverctl map normal $mod Space toggle-float

# Mod+F to toggle fullscreen
riverctl map normal $mod F toggle-fullscreen

# Mod+{Up,Right,Down,Left} to change layout orientation
riverctl map normal $mod Up    send-layout-cmd rivertile "main-location top"
riverctl map normal $mod Right send-layout-cmd rivertile "main-location right"
riverctl map normal $mod Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal $mod Left  send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Mod+F11 to enter passthrough mode
riverctl map normal $mod F11 enter-mode passthrough

# Mod+F11 to return to normal mode
riverctl map passthrough $mod F11 enter-mode normal

# Various media key mapping
for mode in normal locked
do
    # eject the optical drive
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # control audio volume with alsa
    # for some reason -M option is not working
    # riverctl map $mode None XF86AudioRaiseVolume spawn "amixer -M set Master 5%+ | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $WOB_PIPE"
    # riverctl map $mode None XF86AudioLowerVolume spawn "amixer -M set Master 5%- | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $WOB_PIPE"
    # riverctl map $mode None XF86AudioMute spawn "amixer -M set Master toggle | sed -En '/\[on\]/ s/.*\[([0-9]+)%\].*/\1/ p; /\[off\]/ s/.*/0/p' | head -1 > $WOB_PIPE"

	# control microphone volume with alsa
    riverctl map $mode Control XF86AudioRaiseVolume spawn "amixer -M set Capture 5%+ | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $WOB_PIPE"
    riverctl map $mode Control XF86AudioLowerVolume spawn "amixer -M set Capture 5%- | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $WOB_PIPE"
    riverctl map $mode Control XF86AudioMute spawn "amixer -M set Capture toggle | sed -En '/\[on\]/ s/.*\[([0-9]+)%\].*/\1/ p; /\[off\]/ s/.*/0/p' | head -1 > $WOB_PIPE"

	# control audio volume with pipewire
    riverctl map $mode None XF86AudioRaiseVolume spawn "pactl set-sink-volume @DEFAULT_SINK@ +5%; print-volume-pactl > $WOB_PIPE"
    riverctl map $mode None XF86AudioLowerVolume spawn "pactl set-sink-volume @DEFAULT_SINK@ -5%; print-volume-pactl > $WOB_PIPE"
    riverctl map $mode None XF86AudioMute spawn "pactl set-sink-mute @DEFAULT_SINK@ toggle; print-volume-mute-status-pactl > $WOB_PIPE"

    # control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

	# brightness
	riverctl map $mode None XF86MonBrightnessUp   spawn "adjust_brightness.sh up > $WOB_PIPE"
	riverctl map $mode None XF86MonBrightnessDown spawn "adjust_brightness.sh down > $WOB_PIPE"

	# Map power off key to lock system
	# riverctl map normal None XF86PowerOff spawn "waylock --init-color 0xebdbb2 --input-color 0xb8bb26 --fail-color 0xfb4934"
	riverctl map $mode None XF86PowerOff spawn "waylock"
done

# Spawn new window in less important part
riverctl attach-mode bottom

# Set background and border color
riverctl background-color 0x1d2021
# default
#riverctl border-color-focused 0x93a1a1
#riverctl border-color-unfocused 0x586e75
# new
riverctl border-color-focused 0x6e6e6e
riverctl border-color-unfocused 0x525252 

# Set border width
riverctl border-width 3

# Moving the cursor on another window change focus
riverctl focus-follows-cursor normal

# Set repeat rate
riverctl set-repeat 60 300

# Cursor theme
# remember to change also environment variables (.config/shell/envrc)
# remember to change also .icons/default/index.theme
riverctl xcursor-theme Adwaita 20
# riverctl xcursor-theme OpenZone_White 32
# riverctl xcursor-theme Human 32

# Make certain views start floating
riverctl float-filter-add app-id float
riverctl float-filter-add title "popup title with spaces"

# Set app-ids and titles of views which should use client side decorations
riverctl csd-filter-add app-id "gedit"

# Input set all touchpads (so it works on multiple machines)
touchpads="$(riverctl list-inputs | grep -i touchpad)"

while read touchpad; do
	riverctl input $touchpad events enabled
	riverctl input $touchpad accel-profile none
	riverctl input $touchpad disable-while-typing enabled
	riverctl input $touchpad middle-emulation enabled
	riverctl input $touchpad natural-scroll enabled
	riverctl input $touchpad left-handed disabled
	riverctl input $touchpad scroll-method two-finger
done <<EOT
$(echo "$touchpads")
EOT

# start with an instance of foot
exec riverctl spawn footclient

# starting with runit
#svdir="/tmp/$(id -u)-sv-${WAYLAND_DISPLAY}"

#pgrep -f "^runsvdir ${svdir}" && exec echo "runsvdir already running for wayland session"

# recursive, deref links, preserve mode, if target is a dir, overwrite instead of copying into it
#cp -rLpT ~/.local/sv $svdir

#exec runsvdir $svdir
