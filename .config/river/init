#!/bin/sh

### start all program/services in the background

## starting services with runsvdir

# start foot server
# foot --server &

# start pipewire (before waybar otherwise PulseAudio module may not start)
# pipewire &
# pipewire-pulse &
# # pipewire-media-session &

# start waybar
# waybar &

# Turin coordinates
# wlsunset -l 45.1 -L 7.7 &
# Lausanne coordinates
# wlsunset -l 46.5 -L 6.6 &

# libinput-gestures
# libinput-gestures &

# wob
if [ -p "$WOB_PIPE" ] || [ -p "$WOB_PIPE_CENTER" ]; then
    killall wob
    rm -f "$WOB_PIPE"
    rm -f "$WOB_PIPE_CENTER"
fi
mkfifo "$WOB_PIPE"
mkfifo "$WOB_PIPE_CENTER"
tail -f "$WOB_PIPE" | wob --anchor "top" --anchor "right" &
tail -f "$WOB_PIPE_CENTER" | wob --anchor "center" --width 400 &
# tail -f "$WOB_PIPE_CENTER" | wob --anchor "center" --width 400 --height 400 &

# load brightness level
adjust_brightness.sh load
# echo "brightness level is: $(adjust_brightness.sh load)"

# scale everything (problems with partial scaling)
# wlr-randr --output eDP-1 --scale 1.25

# use the "logo" gui key as the primary modifier
gui="Mod4"

# alt key
alt="Mod1"

### Programs

# Gui + key used
# Delete Return Backspace Space Period Comma
# {Up,Right,Down,Left} [0-9] F11
# {H,J,K,L} Q F U N P
# S E Z B I C M A V T

# Gui+Control+Space footclient
riverctl map normal "$gui"+Control Space spawn "footclient"
# Gui+Control+Backspace footclient float
riverctl map normal "$gui"+Control Backspace spawn "footclient-float"
# Gui+Control+Return footclient float fullscreen
riverctl map normal "$gui"+Control Return spawn "footclient-float-fullscreen"

# Gui+S screenshot selection with grim and slurp
# shellcheck disable=SC2016
riverctl map normal "$gui" S spawn 'screenshot selection; echo "100" > $WOB_PIPE_CENTER'
# Gui+Shift+S screenshot fullscreen with grim and slurp
# shellcheck disable=SC2016
riverctl map normal "$gui"+Shift S spawn 'screenshot fullscreen; echo "100" > $WOB_PIPE_CENTER'
# old screenshot with grim and slurp
# shellcheck disable=SC2016
# riverctl map normal "$gui" S spawn 'grim -g "$(slurp)" - | wl-copy-env'

# Gui+E edit clipboard
riverctl map normal "$gui" E spawn "footclient-run --foot clipboard-edit"

# Gui+Z kak-fzf
riverctl map normal "$gui" Z spawn "footclient-run --fzf fzf-kak"
# Gui+Shift+Z kak-fzf from root
riverctl map normal "$gui"+Shift Z spawn "footclient-run --fzf fzf-kak --from-root"

# Gui+B menu bookmark options
riverctl map normal "$gui" B spawn "footclient-run --fzf bookmark-menu"

# Gui+I iwctl
riverctl map normal "$gui" I spawn "footclient-float iwctl"

# Gui+C bluetoothctl
riverctl map normal "$gui" C spawn "footclient-float bluetoothctl"

# Gui+M fuzzel
riverctl map normal "$gui" M spawn "fuzzel.sh"

# Gui+A play copied url with mpv audio
# shellcheck disable=SC2016
riverctl map normal "$gui" A spawn 'mpv-url --audio $(wl-paste-env)'
# Gui+V play copied url with mpv
# shellcheck disable=SC2016
riverctl map normal "$gui" V spawn 'mpv-url $(wl-paste-env)'
# Gui+T play copied url with mpv with ytdl mode and medium quality
# shellcheck disable=SC2016
riverctl map normal "$gui" T spawn 'mpv-url --medium $(wl-paste-env)'
# Gui+Shift+T play copied url with mpv with ytdl mode and best quality
# shellcheck disable=SC2016
riverctl map normal "$gui"+Shift T spawn 'mpv-url --best $(wl-paste-env)'
# Gui+Control+T play copied url with mpv with ytdl mode and worst quality
# shellcheck disable=SC2016
riverctl map normal "$gui"+Control T spawn 'mpv-url --worst $(wl-paste-env)'

# Gui+Shift+F firefox menu
riverctl map normal "$gui"+Shift F spawn "footclient-float firefox-menu"

# Gui+Shift+C chromium menu
riverctl map normal "$gui"+Shift C spawn "footclient-float chromium-menu"

### Windows

# Gui+Q to close the focused view
riverctl map normal "$gui" Q close

# Gui+Shift+E to exit river
riverctl map normal "$gui"+Shift E exit

# Gui+J and Gui+K to focus the next/previous view in the layout stack
riverctl map normal "$gui" J focus-view next
riverctl map normal "$gui" K focus-view previous

# Gui+Shift+J and Gui+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal "$gui"+Shift J swap next
riverctl map normal "$gui"+Shift K swap previous

# Gui+Period and Gui+Comma to focus the next/previous output
riverctl map normal "$gui" Period focus-output next
riverctl map normal "$gui" Comma focus-output previous

# Gui+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal "$gui"+Shift Period send-to-output next
riverctl map normal "$gui"+Shift Comma send-to-output previous

# Gui+Backspace focus previous tags
riverctl map normal "$gui" Backspace focus-previous-tags

# Gui+Shift+Backspace tag focused view with previous tags
riverctl map normal "$gui"+Shift Backspace send-to-previous-tags

# Gui+Return to bump the focused view to the top of the layout stack
riverctl map normal "$gui" Return zoom

# Gui+H and Gui+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal "$gui" H send-layout-cmd rivertile "main-ratio -0.025"
riverctl map normal "$gui" L send-layout-cmd rivertile "main-ratio +0.025"

# Gui+Shift+H and Gui+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal "$gui"+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal "$gui"+Shift L send-layout-cmd rivertile "main-count -1"

# Gui+Alt+{H,J,K,L} to move views big step
# TODO: when moving to top move below bar
move_pixel_big=200
riverctl map normal "$gui"+"$alt" H move left   "$move_pixel_big"
riverctl map normal "$gui"+"$alt" J move down   "$move_pixel_big"
riverctl map normal "$gui"+"$alt" K move up     "$move_pixel_big"
riverctl map normal "$gui"+"$alt" L move right  "$move_pixel_big"

# Gui+Alt+Shift+{H,J,K,L} to move views small step
move_pixel_small=20
riverctl map normal "$gui"+"$alt"+Shift H move left     "$move_pixel_small"
riverctl map normal "$gui"+"$alt"+Shift J move down     "$move_pixel_small"
riverctl map normal "$gui"+"$alt"+Shift K move up       "$move_pixel_small"
riverctl map normal "$gui"+"$alt"+Shift L move right    "$move_pixel_small"

# Gui+Alt+Control+{H,J,K,L} to snap views to screen edges
# when snapping to top move below bar
riverctl map normal "$gui"+"$alt"+Control H snap    left
riverctl map normal "$gui"+"$alt"+Control J snap    down
riverctl map normal "$gui"+"$alt"+Control K spawn   riverctl-snap-up-bar
riverctl map normal "$gui"+"$alt"+Control L snap    right

# Gui+Control+{H,J,K,L} to resize views big step
resize_pixel_big=100
riverctl map normal "$gui"+Control H resize horizontal  "-$resize_pixel_big"
riverctl map normal "$gui"+Control J resize vertical    "$resize_pixel_big"
riverctl map normal "$gui"+Control K resize vertical    "-$resize_pixel_big"
riverctl map normal "$gui"+Control L resize horizontal  "$resize_pixel_big"

# Gui+Control+Shift+{H,J,K,L} to resize views small step
resize_pixel_small=10
riverctl map normal "$gui"+Control+Shift H resize horizontal  "-$resize_pixel_small"
riverctl map normal "$gui"+Control+Shift J resize vertical    "$resize_pixel_small"
riverctl map normal "$gui"+Control+Shift K resize vertical    "-$resize_pixel_small"
riverctl map normal "$gui"+Control+Shift L resize horizontal  "$resize_pixel_small"

# Gui+Alt+Control+Shift+{J,K,H,L} to change layout orientation
riverctl map normal "$gui"+"$alt"+Control+Shift H send-layout-cmd rivertile "main-location left"
riverctl map normal "$gui"+"$alt"+Control+Shift J send-layout-cmd rivertile "main-location bottom"
riverctl map normal "$gui"+"$alt"+Control+Shift K send-layout-cmd rivertile "main-location top"
riverctl map normal "$gui"+"$alt"+Control+Shift L send-layout-cmd rivertile "main-location right"

# Gui+{N,P} change tags
riverctl map normal "$gui" N spawn "cycle-focused-tags next 9"
riverctl map normal "$gui" P spawn "cycle-focused-tags previous 9"

# Gui+{Down,Up} move between tags
riverctl map normal "$gui" Down     spawn "cycle-focused-tags next 9"
riverctl map normal "$gui" Up       spawn "cycle-focused-tags previous 9"

# Gui+{Left,Right} move between browser windows
riverctl map normal "$gui" Left     spawn "wtype -M ctrl -M shift -k Tab -m shift -m ctrl"
riverctl map normal "$gui" Right    spawn "wtype -M ctrl -k Tab -m ctrl"

# Gui+Left Mouse Button to move views
riverctl map-pointer normal "$gui" BTN_LEFT move-view

# Gui+Right Mouse Button to resize views
riverctl map-pointer normal "$gui" BTN_RIGHT resize-view

for i in $(seq 1 9); do
    tags="$((1 << (i - 1)))"

    # Gui+[1-9] to focus tag [1-9]
    riverctl map normal "$gui" "$i" set-focused-tags "$tags"

    # Gui+Shift+[1-9] to tag focused view with tag [1-9]
    riverctl map normal "$gui"+Shift "$i" set-view-tags "$tags"

    # Gui+Control+[1-9] to toggle focus of tag [1-9]
    riverctl map normal "$gui"+Control "$i" toggle-focused-tags "$tags"

    # Gui+Control+Shift+[1-9] to toggle tag [1-9] of focused view
    riverctl map normal "$gui"+Control+Shift "$i" toggle-view-tags "$tags"
done

# Gui+0 to focus all tags
# Gui+Shift+0 to tag focused view with all tags
all_tags="$(((1 << 32) - 1))"
riverctl map normal "$gui" 0 set-focused-tags "$all_tags"
riverctl map normal "$gui"+Shift 0 set-view-tags "$all_tags"

# scratchpad
# https://github.com/ifreund/river/wiki/Scratchpad
scratch_tag="$((1 << 20 ))"

# Gui+Delete toggle the scratchpad
riverctl map normal "$gui" Delete toggle-focused-tags "$scratch_tag"

# Gui+Shift+Delete send windows to the scratchpad
riverctl map normal "$gui"+Shift Delete set-view-tags "$scratch_tag"

# set spawn tagmask to ensure new windows does not have the scratchpad tag unless explicitly set
all_but_scratch_tag="$(( ((1 << 32) - 1) ^ scratch_tag ))"
riverctl spawn-tagmask "$all_but_scratch_tag"

# Gui+Space to toggle float
riverctl map normal "$gui" Space toggle-float

# Gui+F to toggle fullscreen
riverctl map normal "$gui" F toggle-fullscreen

# Gui+U set window float fullscreen (stacking mode)
riverctl map normal "$gui" U spawn riverctl-float-fullscreen

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Gui+F11 to enter passthrough mode
riverctl map normal "$gui" F11 enter-mode passthrough

# Gui+F11 to return to normal mode
riverctl map passthrough "$gui" F11 enter-mode normal

# various media key mapping
for mode in normal locked; do
    # eject the optical drive
    riverctl map "$mode" None XF86Eject spawn 'eject -T'

    # control audio volume with alsa
    # for some reason -M option is not working
    # riverctl map "$mode" None XF86AudioRaiseVolume spawn "amixer -M set Master 5%+ | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $WOB_PIPE"
    # riverctl map "$mode" None XF86AudioLowerVolume spawn "amixer -M set Master 5%- | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $WOB_PIPE"
    # riverctl map "$mode" None XF86AudioMute spawn "amixer -M set Master toggle | sed -En '/\[on\]/ s/.*\[([0-9]+)%\].*/\1/ p; /\[off\]/ s/.*/0/p' | head -1 > $WOB_PIPE"

    # control microphone volume with alsa
    # for some reason -M option is not working
    # riverctl map "$mode" Shift XF86AudioRaiseVolume spawn "amixer -M set Capture 1%+ | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $WOB_PIPE"
    # riverctl map "$mode" Shift XF86AudioLowerVolume spawn "amixer -M set Capture 1%- | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $WOB_PIPE"
    # riverctl map "$mode" Shift XF86AudioMute spawn "amixer -M set Capture toggle | sed -En '/\[on\]/ s/.*\[([0-9]+)%\].*/\1/ p; /\[off\]/ s/.*/0/p' | head -1 > $WOB_PIPE"

    # control audio volume with pipewire
    riverctl map "$mode" None XF86AudioRaiseVolume spawn "pactl set-sink-volume @DEFAULT_SINK@ +5%; print-volume-pactl audio > $WOB_PIPE"
    riverctl map "$mode" None XF86AudioLowerVolume spawn "pactl set-sink-volume @DEFAULT_SINK@ -5%; print-volume-pactl audio > $WOB_PIPE"
    riverctl map "$mode" None XF86AudioMute spawn "pactl set-sink-mute @DEFAULT_SINK@ toggle; print-volume-mute-status-pactl audio > $WOB_PIPE"

    # control microphone volume with pipewire
    riverctl map "$mode" Shift XF86AudioRaiseVolume spawn "pactl set-source-volume @DEFAULT_SOURCE@ +5%; print-volume-pactl microphone > $WOB_PIPE"
    riverctl map "$mode" Shift XF86AudioLowerVolume spawn "pactl set-source-volume @DEFAULT_SOURCE@ -5%; print-volume-pactl microphone > $WOB_PIPE"
    riverctl map "$mode" Shift XF86AudioMute spawn "pactl set-source-mute @DEFAULT_SOURCE@ toggle; print-volume-mute-status-pactl microphone > $WOB_PIPE"

    # control MPRIS aware media players with playerctl
    riverctl map "$mode" None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map "$mode" None XF86AudioNext  spawn 'playerctl next'
    riverctl map "$mode" None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map "$mode" None XF86AudioStop  spawn 'playerctl stop'

    # brightness
    riverctl map "$mode" None XF86MonBrightnessUp   spawn "adjust_brightness.sh up > $WOB_PIPE"
    riverctl map "$mode" None XF86MonBrightnessDown spawn "adjust_brightness.sh down > $WOB_PIPE"

    # Gui+F12 poweroff
    riverctl map "$mode" "$gui" F12 spawn "doas poweroff"
    # Gui+F10 reboot
    riverctl map "$mode" "$gui" F10 spawn "doas reboot"
    # Gui+F9 zzz
    riverctl map "$mode" "$gui" F9 spawn "doas zzz"
done

# spawn new window in less important part
riverctl attach-mode bottom

## set colors

# background
riverctl background-color 0x1d2021
# foreground 4
riverctl border-color-focused 0xa89984
# background 2
riverctl border-color-unfocused 0x504945
# red normal
riverctl border-color-urgent 0xcc241d
# default
# riverctl border-color-focused 0x93a1a1
# riverctl border-color-unfocused 0x586e75

# set border width
riverctl border-width 3

# moving the cursor on another window change focus
riverctl focus-follows-cursor disabled
# riverctl focus-follows-cursor normal

# set repeat rate
riverctl set-repeat 100 250

# cursor theme
# remember to change also .config/shell/envrc
# remember to change also .config/gtk-{2, 3}.0/{config, settings.ini}
# remember to change also .icons/default/index.theme
riverctl xcursor-theme Adwaita 16
# riverctl xcursor-theme OpenZone_White 32
# riverctl xcursor-theme Human 32

# make certain views start floating
# set app-ids of views which should float
# <https://git.sr.ht/~leon_plickat/lswt>
riverctl float-filter-add app-id "float"
riverctl float-filter-add app-id "popup"
riverctl float-filter-add app-id "mpv"
riverctl float-filter-add app-id "imv"

# set app-ids and titles of views which should use client side decorations
# riverctl csd-filter-add app-id "gedit"

# set up touchpad with riverctl
riverctl-set-input touchpad

# run extra initializations
river-init-extra

# set volume and start programs
river-init-session &

# set and exec into the default layout generator, rivertile
# river will send the process group of the init executable SIGTERM on exit
riverctl default-layout rivertile

# start rivertile without padding
# exec rivertile -view-padding 0 -outer-padding 0 -main-ratio 0.6

# starting with runit
# TODO: /run is mounted noexec so can't use XDG_RUNTIME_DIR
svdir="/tmp/$(id -u)-sv-$WAYLAND_DISPLAY"

pgrep -f "^runsvdir $svdir" &&
    exec echo "runsvdir already running for wayland session"

# recursive, deref links, preserve mode, if target is a dir, overwrite instead of copying into it
cp -rLpT "$HOME/.local/sv" "$svdir"

exec runsvdir "$svdir" \
    'log: ...........................................................................................................................................................................................................................................................................................................................................................................................................'
