#!/bin/bash

# envrc

# add programs to path
# see also .local/bin/git_bare_repository.sh
cargo_bin="$CARGO_HOME/bin"
[ -d "$cargo_bin" ] && \
    export PATH="$cargo_bin:$PATH"
go_bin="$GOPATH/bin"
[ -d "$go_bin" ] && \
    export PATH="$go_bin:$PATH"
npm_bin="/usr/local/lib/npm/bin"
[ -d "$npm_bin" ] && \
    export PATH="$npm_bin:$PATH"
# llvm13_bin="/usr/local/lib/llvm13-release/bin"
# [ -d "$llvm13_bin" ] && \
#     export PATH="$llvm13_bin:$PATH"

# less
# -F automatically exit if the entire file can be displayed on the first screen
# may create problems with nnn
# export LESS="-F -g -i -R -w"
export LESS="-g -i -R -w"

# kak as manpager
export MANPAGER="kak-man"

# ls
export LS_OPTIONS="--color=auto --group-directories-first --format=horizontal --human-readable"

# bat as manpager (set bat config)
# export MANPAGER="bat-man"

# tmp dir
export TMPDIR="/tmp"

# XDG
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_LOCAL_HOME="$HOME/.local"
export XDG_DATA_HOME="$XDG_LOCAL_HOME/share"
export XDG_STATE_HOME="$XDG_LOCAL_HOME/state"
export XDG_LIB_HOME="$XDG_LOCAL_HOME/lib"
export XDG_INCLUDE_HOME="$XDG_LOCAL_HOME/include"
export XDG_BIN_HOME="$XDG_LOCAL_HOME/bin"

# runtime dir
idu="$(id -u)"
export XDG_RUNTIME_DIR="/run/user/$idu"
# export XDG_RUNTIME_DIR="$XDG_LOCAL_HOME/runtime"

# path
export PATH="$XDG_BIN_HOME:$PATH"

# manpath
# if $MANPATH is set, manpath displays its value rather than determining it on the fly
# if $MANPATH is prefixed by a colon, then the value of the variable is
# appended to the list determined from the content of the configuration files
export MANPATH=":$XDG_DATA_HOME/man"

# library path
export LD_LIBRARY_PATH="$XDG_LIB_HOME:$LD_LIBRARY_PATH"

# include directories
export C_INCLUDE_PATH="$XDG_INCLUDE_HOME:$C_INCLUDE_PATH"

# pkg config
export PKG_CONFIG_PATH="$XDG_LIB_HOME/pkgconfig"

# zsh shell
export ZDOTDIR="$XDG_CONFIG_HOME/shell"

# ripgrep config file
export RIPGREP_CONFIG_PATH="$XDG_CONFIG_HOME/ripgrep/rc"

# mbsync config
export MBSYNCRC="$XDG_CONFIG_HOME/mbsync/mbsyncrc"

# weechat
export WEECHAT_HOME="$XDG_CONFIG_HOME/weechat"

# notmuch
# export NOTMUCH_CONFIG="$XDG_CONFIG_HOME/notmuch-config"

# password
export PASSWORD_STORE_DIR="$XDG_DATA_HOME/password-store"

# npm config
# export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME"/npm/npmrc

# gpg
GPG_TTY="$(tty)"
export GPG_TTY
export GNUPGHOME="$XDG_CONFIG_HOME/gnupg"

# gtk-2.0 config file
export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/config"

# R
export R_HOME_USER="$XDG_DATA_HOME/R"
export R_LIBS_USER="$XDG_LIB_HOME/R"
export R_ENVIRON_USER="$XDG_CONFIG_HOME/R/renviron"
export R_PROFILE_USER="$XDG_CONFIG_HOME/R/rprofile"
export R_HISTFILE="$R_HOME_USER/rhistory"

# less history
export LESSHISTFILE="$XDG_DATA_HOME/less/lesshst"

# runit
# export SVDIR="$XDG_CONFIG_HOME"/service

### bash history

# export HISTTIMEFORMAT='%f %t '
export HISTSIZE=
export HISTFILESIZE=
export HISTCONTROL="erasedups:ignoreboth"
export HISTIGNORE="pwd:exit:clear"
# export HISTIGNORE="cd:pwd:exit:q:c:e:ea:et::fe:clear:nnn:n3:xb*():curl"
export HISTFILE="$XDG_DATA_HOME/bash/bash_history"

## sync command history across sessions

# this is faster since only new lines are read from the history file
# export PROMPT_COMMAND="${PROMPT_COMMAND}${PROMPT_COMMAND:+;}history -a;history -n"

# append to hist file, clear local hist then read hist file and add to local hist
# export PROMPT_COMMAND="history -a;history -c;history -r;$PROMPT_COMMAND"

### nnn

export NNN_OPTS="eEHr"
export NNN_COLORS="3415"
export NNN_FCOLORS="070704030f05060808010301"
export NNN_TRASH=1
# export NNN_ARCHIVE="\\.(7z|a|ace|alz|arc|arj|bz|bz2|cab|cpio|deb|gz|jar|lha|lz|lzh|lzma|lzo|rar|rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip)$"
# without rar
export NNN_ARCHIVE="\\.(7z|a|ace|alz|arc|arj|bz|bz2|cab|cpio|deb|gz|jar|lha|lz|lzh|lzma|lzo|rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip)$"

export NNN_PREVIEWDIR="$XDG_CACHE_HOME/nnn/previews"
export NNN_PREVIEWWIDTH="1920"
export NNN_PREVIEWHEIGHT="1080"

export NNN_SEL="/tmp/.sel"
export NNN_FIFO="/tmp/nnn.fifo"

NNN_BMS_CONFIG="c:$XDG_CONFIG_HOME;l:$XDG_LOCAL_HOME"
NNN_BMS_DEV="v:$HOME/dev"
NNN_BMS_DOC="d:$HOME/doc"
NNN_BMS_DOW="w:$HOME/dow"
export NNN_BMS="$NNN_BMS_CONFIG;$NNN_BMS_DEV;$NNN_BMS_DOC;$NNN_BMS_DOW"

NNN_PLUG_EDIT="c:cmx;e:exec"
NNN_PLUG_FUZZY="f:fzfd;h:fzhist;a:autojump"
NNN_PLUG_OPEN="u:doasedit;o:open-editor;i:imgview;d:dragdrop;m:nmount"
NNN_PLUG_GIT="l:!git log;s:!git status"
export NNN_PLUG="$NNN_PLUG_EDIT;$NNN_PLUG_FUZZY;$NNN_PLUG_OPEN;$NNN_PLUG_GIT"

### fzf

# when changing FZF_DEFAULT_COMMAND change also _fzf_compgen_path and _fzf_compgen_dir in .bashrc
export FZF_DEFAULT_COMMAND='fd --hidden --follow --exclude ".git" --exclude ".hg" --exclude ".svn" --color=always --strip-cwd-prefix'
# gruvbox hard dark color and other default options
# --multi --cycle
export FZF_DEFAULT_OPTS='--no-mouse --bind="ctrl-i:accept-non-empty" --bind="ctrl-y:execute-silent(printf {} | cut -f 2- | wl-copy --trim-newline)+accept" --layout=reverse --prompt="  " --ansi --tabstop=4 --color=bg+:#1d2021,bg:#1d2021,spinner:#fb4934,hl:#928374,fg:#ebdbb2,header:#928374,info:#8ec07c,pointer:#fb4934,marker:#fb4934,fg+:#ebdbb2,prompt:#fb4934,hl+:#fb4934'

# command when running <c-t>
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND --type file --type directory --type symlink"
# uses bat command to show the entries of the directory
export FZF_DEFAULT_PREVIEW='bat --color=always --paging=never --theme=gruvbox-dark --style="numbers,changes" --line-range :500 {}'
# uses tree command to show the entries of the directory
# export FZF_DEFAULT_PREVIEW='tree -C {} | head -200'
# select multiple files/directories, inline and preview
export FZF_CTRL_T_OPTS="--multi --info=inline --preview=\"$FZF_DEFAULT_PREVIEW\""

# command when running <a-c> (remapped to <c-f> in .config/shell/fzfrc)
export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND --type directory"
# inline
export FZF_ALT_C_OPTS='--info=inline'

# options to fzf command completion
export FZF_COMPLETION_OPTS='--info=inline'

# string that triggers fzf completion
# export FZF_COMPLETION_TRIGGER='**'

# set client and graphical browser, when running wayland browser is changed
export BROWSER=lynx
export BROWSER_CLI=lynx

# lynx config files
export LYNX_CFG="$XDG_CONFIG_HOME/lynx/lynx.cfg"
export LYNX_LSS="$XDG_CONFIG_HOME/lynx/lynx.lss"

# dir_colors
# eval "$(dircolors $HOME/.dir_colors)"

# set wayland environment variables and start river
if [ "$(id -u)" -ne 0 ] && [ -z "$WAYLAND_DISPLAY" ] && [ "$(tty)" = "/dev/tty1" ]; then
    # session and desktop
    export XDG_SESSION_TYPE=wayland
    export XDG_SESSION_DESKTOP=river
    export XDG_CURRENT_DESKTOP=river
    export DESKTOP_SESSION=river

    # for multi-gpu setup
    # export WLR_DRM_DEVICES=/dev/dri/card0

    # seat management
    # seatd is more minimal
    export LIBSEAT_BACKEND=seatd
    # export LIBSEAT_BACKEND=logind

    # QT
    export QT_QPA_PLATFORM=wayland-egl
    export QT_WAYLAND_DISABLE_WINDOWDECORATION=1

    # SDL
    export SDL_VIDEODRIVER=wayland
    # when no sound in SDL applications
    # export SDL_AUDIODRIVER=alsa

    # clutter
    # export CLUTTER_BACKEND=wayland

    # elementary/EFL
    # export ECORE_EVAS_ENGINE=wayland_egl
    # export ELM_ENGINE=wayland_egl
    # export ELM_DISPLAY=wl
    # export ELM_ACCEL=opengl

    # mozilla
    export MOZ_ENABLE_WAYLAND=1
    # Open links in external applications in Firefox
    # export MOZ_DBUS_REMOTE=1

    # needed for some Java applications
    # export _JAVA_AWT_WM_NONREPARENTING=1

    export BROWSER=firefox
    # export BROWSER="$XDG_BIN_HOME/ungoogled_chromium.sh"

    # set GTK theme
    # export GTK_THEME=Adwaita
    # export GTK_THEME=Adwaita:dark

    # cursor
    # remember to change also .config/river/init
    # remember to change also .config/gtk-{2, 3}.0/{config, settings.ini}
    # remember to change also .icons/default/index.theme
    export XCURSOR_THEME=Adwaita
    export XCURSOR_SIZE=16

    # wob pipe directory
    export WOB_PIPE="/tmp/wobpipe"
    export WOB_PIPE_CENTER="/tmp/wobpipe-center"

    # finally start river with a dbus-session
    exec dbus-run-session river
fi
