#!/bin/bash

#### envrc

# info on keyboard setup
# man xkeyboard-config

# keyboard and layout
export XKB_DEFAULT_LAYOUT="us"
# export XKB_DEFAULT_LAYOUT="it"

# special keys with altgr
# export XKB_DEFAULT_VARIANT="altgr-intl"

# Dell Precision or XPS
# export XKB_DEFAULT_MODEL="precision_m"

# map caps lock to escape and shift + caps lock to caps lock
# remap "< >" key which is extra in us iso layout

# remap "< >" key to enter level 2 (shift)
# export XKB_DEFAULT_OPTIONS="caps:escape_shifted_capslock,lv2:lsgt_switch"
# remap "< >" key to compose key
# export XKB_DEFAULT_OPTIONS="caps:escape_shifted_capslock,compose:102"

# when adding variables here also add to /etc/doas.conf

# editor
export EDITOR="kak"
export VISUAL="kak"
# export EDITOR="nvim"
# export VISUAL="nvim"

# pager
export PAGER="less"

# rust global
export RUSTUP_HOME_GLOBAL="/usr/local/lib/rustup"
export CARGO_HOME_GLOBAL="/usr/local/lib/cargo"
export RUSTUP_HOME="$RUSTUP_HOME_GLOBAL"
export CARGO_HOME="$CARGO_HOME_GLOBAL"

# go
export GOPATH="/usr/local/lib/go"

# npm
# export NPM_CONFIG_GLOBALCONFIG="/etc/npmrc"

# add programs to path
# see also .local/bin/git_bare_repository.sh
cargo_bin="$CARGO_HOME/bin"
[ -d "$cargo_bin" ] && \
    export PATH="$cargo_bin:$PATH"
unset cargo_bin
go_bin="$GOPATH/bin"
[ -d "$go_bin" ] && \
    export PATH="$go_bin:$PATH"
unset go_bin
npm_bin="/usr/local/lib/npm/bin"
[ -d "$npm_bin" ] && \
    export PATH="$npm_bin:$PATH"
unset npm_bin
# llvm13_bin="/usr/local/lib/llvm13-release/bin"
# [ -d "$llvm13_bin" ] && \
#     export PATH="$llvm13_bin:$PATH"
# unset llvm13_bin

# XDG
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_LOCAL_HOME="$HOME/.local"
export XDG_DATA_HOME="$XDG_LOCAL_HOME/share"
export XDG_STATE_HOME="$XDG_LOCAL_HOME/state"
export XDG_LIB_HOME="$XDG_LOCAL_HOME/lib"
export XDG_INCLUDE_HOME="$XDG_LOCAL_HOME/include"
export XDG_BIN_HOME="$XDG_LOCAL_HOME/bin"

# rust local
export RUSTUP_HOME_LOCAL="$XDG_LIB_HOME/rustup"
export CARGO_HOME_LOCAL="$XDG_LIB_HOME/cargo"

# path
cargo_local_lib_bin="$CARGO_HOME_LOCAL/bin"
if [ -d "$cargo_local_lib_bin" ]; then
    export PATH="${cargo_local_lib_bin}:${PATH}"
fi
if [ "$OS_TYPE" = "server" ]; then
    config_bin_dir="$HOME/config/usr/local/bin"
    [ -d "$config_bin_dir" ] && export PATH="$config_bin_dir:$PATH"
    unset config_bin_dir
    dotfiles_bin_dir="$HOME/dotfiles/.local/bin"
    if [ -d "$dotfiles_bin_dir" ]; then
        directories_path="$(find -L "$dotfiles_bin_dir" -type d -printf %p:)"
        export PATH="${directories_path}${PATH}"
        unset directories_path
    fi
    unset dotfiles_bin_dir
fi
# export PATH="$XDG_BIN_HOME:$PATH"
directories_path="$(find -L "$XDG_BIN_HOME" -type d -printf %p:)"
export PATH="${directories_path}${PATH}"
unset directories_path

# manpath
# if $MANPATH is set, manpath displays its value rather than determining it on the fly
# if $MANPATH is prefixed by a colon, then the value of the variable is
# appended to the list determined from the content of the configuration files
export MANPATH=":$XDG_DATA_HOME/man"

### bash history

# export HISTTIMEFORMAT='%f %t '
export HISTSIZE=
export HISTFILESIZE=
export HISTCONTROL="erasedups:ignoreboth"
export HISTIGNORE="pwd:exit:clear"
# export HISTIGNORE="cd:pwd:exit:q:c:e:ea:et::fe:clear:nnn:n3:xb*():curl"
bash_data="$XDG_DATA_HOME/bash"
[ ! -d "$bash_data" ] && mkdir -p "$bash_data"
export HISTFILE="$bash_data/bash_history"
unset bash_data

## sync command history across sessions

# this is faster since only new lines are read from the history file
# export PROMPT_COMMAND="${PROMPT_COMMAND}${PROMPT_COMMAND:+;}history -a;history -n"

# append to hist file, clear local hist then read hist file and add to local hist
# export PROMPT_COMMAND="history -a;history -c;history -r;$PROMPT_COMMAND"

### fzf

# FZF_DEFAULT_COMMAND is used in multiple places
export FZF_DEFAULT_COMMAND='fd --hidden --follow --exclude=.git --exclude=.hg --exclude=.svn --color=always --full-path --strip-cwd-prefix'
# gruvbox hard dark color and other default options
# --multi --cycle
# --color "hl:-1:underline,hl+:-1:underline:reverse"
export FZF_DEFAULT_COLORS='bg+:#1d2021,bg:#1d2021,spinner:#fb4934,hl:#928374,fg:#ebdbb2,header:#928374,info:#8ec07c,pointer:#fb4934,marker:#fb4934,fg+:#ebdbb2,prompt:#fb4934,hl+:#fb4934'
export FZF_DEFAULT_OPTS="--no-mouse --bind='ctrl-i:accept-non-empty' --bind='ctrl-y:execute-silent(printf {} | cut -f 2- | '\$COPY_CMD' -n)' --layout=reverse --prompt='  ' --ansi --tabstop=4 --color=\"$FZF_DEFAULT_COLORS\""

# command when running <c-t> remapped to <a-f>
# search files and symlinks
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND --type file --type symlink"
# uses bat command to show the entries of the directory
export FZF_DEFAULT_PREVIEW='bat --color=always --paging=never --theme=gruvbox-dark --style="numbers,changes" --line-range :500 {}'
# uses tree command to show the entries of the directory
# export FZF_DEFAULT_PREVIEW='tree -C {} | head -200'
# select multiple files/directories, inline and preview
export FZF_CTRL_T_OPTS="--multi --info=inline --preview=\"$FZF_DEFAULT_PREVIEW\""

# command when running <a-c> remapped to <a-d>
# remapped in fzfrc to just print directories without cd in front
export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND --type directory"
# inline
export FZF_ALT_C_OPTS='--info=inline'

# options to fzf command completion
export FZF_COMPLETION_OPTS='--info=inline'

export WINDOW_WIDTH="1920"
export WINDOW_HEIGHT="1080"

# 7/8
export FZF_RG_WIDTH="1680"
export FZF_RG_HEIGHT="945"

export FZF_TMUX_HEIGHT="100%"

# 5/8
export FOOT_FLOAT_WIDTH="1200"
export FOOT_FLOAT_HEIGHT="675"

# string that triggers fzf completion
# export FZF_COMPLETION_TRIGGER='**'

# less history
less_data="$XDG_DATA_HOME/less"
[ ! -d "$less_data" ] && mkdir -p "$less_data"
export LESSHISTFILE="$less_data/lesshst"
unset less_data

# gnupg
export GNUPGHOME="$XDG_CONFIG_HOME/gnupg"

# set client and graphical browser, when running wayland browser is changed
export BROWSER=lynx
export BROWSER_CLI=lynx

# lynx config files
export LYNX_CFG="$XDG_CONFIG_HOME/lynx/lynx.cfg"
export LYNX_LSS="$XDG_CONFIG_HOME/lynx/lynx.lss"

# less
export LESS="-g -i -M -j -4 --tabs=1,5"
# additional parameters
# export LESS="-R -w -F -N"

# password
export PASSWORD_STORE_DIR="$XDG_DATA_HOME/password-store"

# ls
if [ ! "$OPERATING_SYSTEM" = "openbsd" ]; then
    export LS_COMMAND="ls --color=auto --group-directories-first --format=horizontal --human-readable"
else
    export LS_COMMAND="colorls -G -x -h"
    export LSCOLORS="ExFxGxDxCxegedabagacad"
fi

# if on server exit
if [ "$OS_TYPE" = "server" ]; then
    export COPY_CMD="clipboard-tty-copy"
    export PASTE_CMD="clipboard-tty-paste"
    # build foot terminfo/termcap or set TERM
    # export TERM="xterm-256color"

    # exit also return scripts where this is sourced return no
    return 0
else
    export COPY_CMD="wl-copy-env"
    export PASTE_CMD="wl-paste-env"
fi

# runtime dir
idu="$(id -u)"
export XDG_RUNTIME_DIR="/run/user/$idu"
# export XDG_RUNTIME_DIR="$XDG_LOCAL_HOME/runtime"

# less as manpager
# export MANPAGER=less

# bat as manpager (set bat config)
# export MANPAGER="bat-man"

# kak as manpager
export MANPAGER="kak-man"

# tmp dir
export TMPDIR="/tmp"

# library path
export LD_LIBRARY_PATH="$XDG_LOCAL_HOME/lib64:$XDG_LIB_HOME:$LD_LIBRARY_PATH"

# include directories
export C_INCLUDE_PATH="$XDG_INCLUDE_HOME:$C_INCLUDE_PATH"

# pkg config
export PKG_CONFIG_PATH="$XDG_LIB_HOME/pkgconfig"

# zsh shell
export ZDOTDIR="$XDG_CONFIG_HOME/shell"

# ripgrep config file
export RIPGREP_CONFIG_PATH="$XDG_CONFIG_HOME/ripgrep/rc"

# mbsync config
export MBSYNCRC="$XDG_CONFIG_HOME/mbsync/mbsyncrc"

# weechat
# With an empty value (recommended), XDG directories are used by default. If
# non empty, a single directory for all files is used. The value can
# also be 4 directories separated by colons, in this order: config, data,
# cache, runtime.
# export WEECHAT_HOME="$XDG_CONFIG_HOME/weechat"

# notmuch
# export NOTMUCH_CONFIG="$XDG_CONFIG_HOME/notmuch-config"

# npm config
# export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME"/npm/npmrc

# gtk-2.0 config file
export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/config"

# R
export R_HOME_USER="$XDG_DATA_HOME/R"
export R_LIBS_USER="$XDG_LIB_HOME/R"
export R_ENVIRON_USER="$XDG_CONFIG_HOME/R/renviron"
export R_PROFILE_USER="$XDG_CONFIG_HOME/R/rprofile"
export R_HISTFILE="$R_HOME_USER/rhistory"

# yt-dl
export YTDL="yt-dlp"
# export YTDL="youtube-dl"

# runit
# export SVDIR="$XDG_CONFIG_HOME"/service

### nnn

export NNN_OPTS="eEHr"
export NNN_COLORS="3415"
export NNN_FCOLORS="070704030f05060808010301"
export NNN_TRASH=1
# export NNN_ARCHIVE="\\.(7z|a|ace|alz|arc|arj|bz|bz2|cab|cpio|deb|gz|jar|lha|lz|lzh|lzma|lzo|rar|rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip)$"
# without rar
export NNN_ARCHIVE="\\.(7z|a|ace|alz|arc|arj|bz|bz2|cab|cpio|deb|gz|jar|lha|lz|lzh|lzma|lzo|rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip)$"

export NNN_PREVIEWDIR="$XDG_CACHE_HOME/nnn/previews"
export NNN_PREVIEWWIDTH="$WINDOW_WIDTH"
export NNN_PREVIEWHEIGHT="$WINDOW_HEIGHT"

export NNN_SEL="/tmp/.sel"
export NNN_FIFO="/tmp/nnn.fifo"

NNN_BMS_CONFIG="c:$XDG_CONFIG_HOME;l:$XDG_LOCAL_HOME"
NNN_BMS_DEV="v:$HOME/dev"
NNN_BMS_DOC="d:$HOME/doc"
NNN_BMS_DOW="w:$HOME/dow"
export NNN_BMS="$NNN_BMS_CONFIG;$NNN_BMS_DEV;$NNN_BMS_DOC;$NNN_BMS_DOW"

NNN_PLUG_EDIT="c:cmx;e:exec"
NNN_PLUG_FUZZY="f:fzfd;h:fzhist;a:autojump"
NNN_PLUG_OPEN="u:doasedit;o:open-editor;i:imgview;d:dragdrop;m:nmount"
NNN_PLUG_GIT="l:!git log;s:!git status"
export NNN_PLUG="$NNN_PLUG_EDIT;$NNN_PLUG_FUZZY;$NNN_PLUG_OPEN;$NNN_PLUG_GIT"

# start river
if [ "$(id -u)" -ne 0 ] && [ -z "$WAYLAND_DISPLAY" ] && [ "$(tty)" = "/dev/tty1" ]; then
    if command -v river >/dev/null 2>&1; then
        river-start
        exit
    fi
fi
