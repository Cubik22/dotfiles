#!/bin/sh

print_info=$(cat << EOF
SYNOPSIS
        firefox-update-config [option]... [config]...

DESCRIPTION
        update firefox configs
        specify any number of configs
        by default it updates all profiles

        -h, --help
            print this info and exit

        -p, --print-profiles
            print firefox profiles

        --hard
            update just hard profile

        --normal
            update just normal profile

        --soft
            update just soft profile

        -a, --all-configs
            update all configs available

        chrome
            copy userChrome.css

        search
            copy search engines file

        ext
            remove default search engines from extension files
EOF
)

list_profiles() {
    for profile in $profiles_available; do
        profile_dir="$HOME/.mozilla/firefox/$profile"
        if [ -d "$profile_dir" ]; then
            echo "profile $profile present"
        else
            echo "profile $profile not created"
        fi
    done
}

config_parameter() {
    found=false
    for config_available in $configs_available; do
        if [ "$param" = "$config_available" ]; then
            found=true
            break
        fi
    done
    if [ "$found" = "true" ]; then
        case "$configs" in
            *"$param"*) ;;
            *)
                if [ "$param" = "search" ]; then
                    if ! command -v mozlz4 >/dev/null 2>&1; then
                        if [ "$search_error" = "false" ]; then
                            echo "warning: mozlz4 not in path, search option not available"
                            search_error=true
                        fi
                        return 0
                    fi
                fi
                configs="$configs $param"
            ;;
        esac
    else
        echo "wrong parameter: $param"
        echo
        echo "$print_info"
        return 1
    fi
}

if [ "$#" -lt 1 ]; then
    echo "error: no parameters"
    echo
    echo "$print_info"
    return 1
fi

profiles_available="hard normal soft"
configs_available="chrome search ext"

profiles="$profiles_available"
configs=""

search_error=false

for param in "$@"; do
    case "$param" in
        -h|--help)
            echo "$print_info"
            return 0
        ;;
        -p|--print-profiles)
            list_profiles
            return 0
        ;;
        --hard)
            profiles="hard"
        ;;
        --normal)
            profiles="normal"
        ;;
        --soft)
            profiles="soft"
        ;;
        -a|--all-configs)
            configs="$configs_available"
            continue
        ;;
        *)
            if ! config_parameter; then
                return 1
            fi
        ;;
    esac
done

firefox_dir="${XDG_CONFIG_HOME:-$HOME/.config}/firefox"

file_tmp="$(mktemp file-XXXXXX)"
for profile in $profiles; do
    profile_dir="$HOME/.mozilla/firefox/$profile"
    if [ ! -d "$profile_dir" ]; then
        echo "profile $profile not created"
        continue
    fi
    for config in $configs; do
        case "$config" in
            chrome)
                cp -r "$firefox_dir/base" "$profile_dir/chrome"
            ;;
            search)
                if [ ! "$profile" = "hard" ]; then
                    mozlz4 -z "$firefox_dir/search.json" "$profile_dir/search.json.mozlz4"
                else
                    mozlz4 -z "$firefox_dir/search-post.json" "$profile_dir/search.json.mozlz4"
                fi
            ;;
            ext)
                firefox-remove-default-search-engines exte "$profile_dir/extensions.json" > "$file_tmp"
                cp "$file_tmp" "$profile_dir/extensions.json"

                firefox-remove-default-search-engines pref "$profile_dir/extension-preferences.json" > "$file_tmp"
                cp "$file_tmp" "$profile_dir/extension-preferences.json"
            ;;
        esac
    done
done
rm -rf "$file_tmp"
