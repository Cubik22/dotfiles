#!/bin/sh

# add a bookmark

if [ "$#" -eq 0 ]; then
    mode="base"
else
    case "$1" in
        base|editor|title|copy|repo|article)
            mode="$1"
        ;;
        *)
            echo "error: wrong parameter"
            return 1
        ;;
    esac
fi

bookmarks_dir="${XDG_LOCAL_HOME:=$HOME/.local}/etc/bookmarks"
cd "$bookmarks_dir" || return 1

export FZF_DEFAULT_COMMAND="$FZF_DEFAULT_COMMAND --type file"
# export FZF_DEFAULT_COMMAND="$FZF_DEFAULT_COMMAND --type file |
#     rev | cut -d '/' -f 1,3- | rev"
file="$(fzf --prompt "${FZF_BEFORE_PROMPT}add: ")"

[ ! -f "$file" ] && return 1

# remove / or /# from end of url
url="$("$PASTE_CMD" -n | sed 's/\/\(#\|\)$//')"

case "$mode" in
    base)
        # ask name to user
        while [ -z "$name" ]; do
            clear
            printf "%s" "bookmark name: "
            read -r name
        done
    ;;
    editor)
        # ask name with editor
        ask_file="$(mktemp)"
        "${EDITOR:-kak}" "$ask_file"
        number_lines="$(wc -l "$ask_file" | cut -d " " -f 1)"
        name="$(cat "$ask_file")"
        rm -f "$ask_file"
        [ "$number_lines" -ne 1 ] && return 0
        [ -z "$name" ] && return 0
    ;;
    title)
        name="$(url-title "$url")"
	;;
    copy)
        # name is the same as url without http(s)://(www.)
        name="$(echo "$url" | sed 's/^http\(s\|\):\/\/\(www\.\|\)//')"
    ;;
    article)
        # url/wiki/stf/<name>
        # remove # from start
        name="$(echo "$url" | rev | cut -d "/" -f 1 | rev | sed 's/^#//')"
    ;;
    repo)
        # name is <user>/<project>
        name="$(echo "$url" | rev | cut -d "/" -f 1-2 | rev)"
    ;;
esac

printf "%s" "$url" >> "$file"
printf " %s\n" "$name" >> "$file"

# make sure file ends with newline
# test "$(tail -c 1 "$file" | wc -l)" -eq 0 && printf "\n" >> "$file"
